@import '~terra-mixins/lib/Mixins';

:local {
  .header-cell {
    border-right: var(--terra-table-header-check-cell-border-right, 1px solid #ccc);
    display: flex;
    flex: 0 0 auto;
    flex-direction: column;
    justify-content: flex-end;
    outline: none;
    position: relative;

    &:last-of-type {
      border-right: 0;
    }
  }

  .checkmark {
    border: 1px solid transparent;
    border-radius: 3px;  // TODO: Need expected sizing
    color: transparent;
    height: 1rem; // TODO: Need expected sizing
    padding: 1px;
    position: relative;
    width: 1rem; // TODO: Need expected sizing
  }

  .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
  }

  .is-selected {
    color: #000; // TODO: themable variable
    background: var(--terra-table-header-chevron-cell-background, inline-svg('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 48 48" enable-background="new 0 0 48 48" xml:space="preserve"><path id="checkmark" d="M18.4 40.9L0 22.5l4.2-4.2 14.2 14.2L43.8 7.1l4.2 4.2z"/></svg>'));
    background-repeat: no-repeat;
    background-size: contain;
    display: block;
    transform: rotate(0deg);

    // flips the icon about its vertical axis, presenting it in its mirrored-image form
    [dir=rtl] & {
      transform: scaleX(-1);
    }
  }

  .is-selected.is-intermediate {
    color: #ccc; // TODO: themable variable
    background: var(--terra-table-header-chevron-intermediate-cell-background, inline-svg('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 48 48" enable-background="new 0 0 48 48" xml:space="preserve"><path id="minus" d="M48 27H0v-6h48v6z"/></svg>'));
  }

  .is-selectable .checkmark {
    background-color: #fff;
    border: 1px solid #000;
  }
  
  /* stylelint-disable selector-max-compound-selectors */
  .is-selectable:hover,
  .is-selectable:focus {
    .container > .highlight {
      background-color: #c0bdbd; // TODO: Need hover styling
      border-radius: 100%;
      content: '';
      height: 24px; // TODO: Need expected sizing
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate3d(-50%, -50%, 0);
      width: 24px; // TODO: Need expected sizing
      z-index: 1;
    }

    .container > .checkmark {
      z-index: 2;
    }
  }

  .is-selectable[data-cell-show-focus='true']:focus {
    &:hover {
      .container > .highlight {
        background-color: #e75959; // TODO: Need hover styling
      }
    }

    .container > .highlight {
      background-color: #bbb2f0; // TODO: Need focus styling
    }
  }
  /* stylelint-enable selector-max-compound-selectors */

  [data-table-padding='standard'] .container {
    padding-bottom: var(--terra-table-header-check-cell-standard-padding-bottom, 0.5rem);
    padding-left: var(--terra-table-header-check-cell-standard-padding-left, 0.7142857143rem);
    padding-right: var(--terra-table-header-check-cell-standard-padding-right, 0.7142857143rem);
    padding-top: var(--terra-table-header-check-cell-standard-padding-top, 0.5rem);
  }

  [data-table-padding='compact'] .container {
    padding-bottom: var(--terra-table-header-check-cell-compact-padding-bottom, 0.35715rem);
    padding-left: var(--terra-table-header-check-cell-compact-padding-left, 0.7142857143rem);
    padding-right: var(--terra-table-header-check-cell-compact-padding-right, 0.7142857143rem);
    padding-top: var(--terra-table-header-check-cell-compact-padding-top, 0.35715rem);
  }
}
